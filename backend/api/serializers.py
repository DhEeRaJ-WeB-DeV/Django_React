from django.contrib.auth.models import User
from rest_framework import serializers
from .models import Note

class UserSerializer(serializers.ModelSerializer):
    class Meta:
        model = User
        fields = ["id","username","password"]
        extra_kwargs = {"password":{"write_only":True}}#write_only: True ensures the password is only used during creation or updating, and never included in serialized output (for security reasons).

    def create(self,validated_data):#validated_data is automatically generated by Django REST Framework (DRF) during the serializer's validation process.When you call serializer.is_valid()
            user = User.objects.create_user(**validated_data) 
            return user

class NoteSerializer(serializers.ModelSerializer):
    class Meta:
        model = Note
        fields = ["id", "title", "content", "created_at", "author"]
        extra_kwargs = {"author": {"read_only": True}}